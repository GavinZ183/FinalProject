/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Seller.SalesManager;

import Business.Buyer.Buyer;
import Business.BuyerOrder.BuyOrderItem;
import Business.ExpressCompany.ExpressCompany;
import Business.Network.Network;
import Business.Seller.SalesManage.SalesManage;
import Business.Seller.Seller;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TT1
 */
public class ManageBuyerOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageBuyerOrderJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Network network;
    Seller seller;
    ArrayList<BuyOrderItem> itemList = new ArrayList<BuyOrderItem>();
    ExpressCompany ec;
    public ManageBuyerOrderJPanel(JPanel userProcessContainer, UserAccount account, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.network = network;
        
        for(Seller sel: network.getSellerDirectory().getSellerList()){
            for(SalesManage salesManager: sel.getSalesManageDir().getSalesManageList()){
                if(salesManager.getUserAccount().getUsername().equals(account.getUsername())){
                    seller = sel;
                }
            }
        }
        
        populateOrderListTable();
        
        ArrayList<ExpressCompany> list = network.getExpressCompanyDir().getExpressCompanyList();
        for(int i=0;i<list.size();i++){
             jComboBox1.addItem(list.get(i).getName());//在快递公司类下面添加一个position属性
        }
    }

    public void populateOrderListTable(){
        int rowCount = jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        itemList.clear();
        for(Buyer buyer: network.getBuyerDirectory().getBuyerList()){
            for(BuyOrderItem item: buyer.getBuyOrder().getOrderItemList()){
                if(item.getGood().getSeller().equals(seller)){
                    Object row[] = new Object[8];
                    row[0] = item;
                    row[1] = item.getGood().getPrice();
                    row[2] = buyer;
                    row[3] = buyer.getPosition();
                    row[4] = item.getCreateTime();
                    row[5] = item.getQuantity();
                    row[6] = item.getGood().getQuantity();
                    row[7] = item.getStatus();

                    model.addRow(row);
                    itemList.add(item);
                }
            }
        }   
    }
    
    public void searchOrderItemTable(ArrayList<BuyOrderItem> itemlist){
        int rowCount = jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        for(BuyOrderItem item: itemlist){

            Object row[] = new Object[8];
            row[0] = item;
            row[1] = item.getGood().getPrice();
            row[2] = item.getBuyer();
            row[3] = item.getBuyer().getPosition();
            row[4] = item.getCreateTime();
            row[5] = item.getQuantity();
            row[6] = item.getGood().getQuantity();
            row[7] = item.getStatus();

            model.addRow(row);

        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBuyer = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnhooseDeliveryCompany = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPosition = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnFreshTable = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtProduct = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setBackground(java.awt.Color.pink);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtBuyer, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 360, 151, -1));

        jLabel6.setText("Buyer:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 370, -1, -1));

        btnhooseDeliveryCompany.setText("Choose Delivery Company");
        btnhooseDeliveryCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhooseDeliveryCompanyActionPerformed(evt);
            }
        });
        add(btnhooseDeliveryCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 550, 190, -1));

        jLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel1.setText("Manage Buyer Order Screen");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 384, -1));

        jLabel7.setText("Position:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 410, -1, -1));
        add(txtPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, 151, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "Buyer", "Buyer Position", "Time", "Quantity", "Inventory", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 764, 147));

        btnFreshTable.setText("Fresh table");
        btnFreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFreshTableActionPerformed(evt);
            }
        });
        add(btnFreshTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 70, -1, -1));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 500, 130, -1));

        jLabel4.setText("Product:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, -1, -1));

        jLabel2.setText("Buyer order list:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));
        add(txtProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 152, -1));
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 152, -1));

        jLabel5.setText("Time:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 320, -1, -1));
        add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, 152, -1));

        jLabel8.setText("Status:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, -1, -1));

        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 550, 160, -1));

        jLabel9.setText("Delivery Company:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 550, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/020-发货.png"))); // NOI18N
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 70, 70));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg3-1.png"))); // NOI18N
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 760, 390));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String goodname = txtProduct.getText();
        String buyer = txtBuyer.getText();
        String position = txtPosition.getText();
        String status = txtStatus.getText();
        String time = "";
        if(txtTime.getText().length()>0){
            try{
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm");
                Date date = format.parse(txtTime.getText());
                time = format.format(date);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please input time on format:'yyyy-MM-dd HH:mm'!", "Warning", JOptionPane.WARNING_MESSAGE);
                txtTime.setBorder(BorderFactory.createLineBorder(Color.red));
                jLabel5.setForeground(Color.red);
                return;
            }
        }
              
        //star to filter no-empty requirement
        ArrayList<BuyOrderItem> orderItemList = new ArrayList<BuyOrderItem>();
        if(goodname.length()>0){
            for(BuyOrderItem item: itemList){
                if(item.getGood().getProdName().equals(goodname)){
                    orderItemList.add(item);
                }
            }
        }
        else{
            orderItemList = itemList;
        }
        ArrayList<BuyOrderItem> orderItemList1 = new ArrayList<BuyOrderItem>();
        if(buyer.length()>0){
            for(BuyOrderItem item: orderItemList){
                if(item.getBuyer().getUserAccount().getUsername().equals(buyer)){
                    orderItemList1.add(item);
                }
            }
        }
        else{
            orderItemList1 = orderItemList;
        }
        ArrayList<BuyOrderItem> orderItemList2 = new ArrayList<BuyOrderItem>();
        if(position.length()>0){
            for(BuyOrderItem item: orderItemList1){
                if(item.getBuyer().getPosition().equals(position)){
                    orderItemList2.add(item);
                }
            }
        }
        else{
            orderItemList2 = orderItemList1;
        }
        ArrayList<BuyOrderItem> orderItemList3 = new ArrayList<BuyOrderItem>();
        if(time.length()>0){
            for(BuyOrderItem item: orderItemList2){
                if(item.getCreateTime().equals(time)){
                    orderItemList3.add(item);
                }
            }
        }
        else{
            orderItemList3 = orderItemList2;
        }
        ArrayList<BuyOrderItem> orderItemList4 = new ArrayList<BuyOrderItem>();
        if(status.length()>0){
            for(BuyOrderItem item: orderItemList3){
                if(item.getStatus().equals(status)){
                    orderItemList4.add(item);
                }
            }
        }
        else{
            orderItemList4 = orderItemList3;
        }
        
        searchOrderItemTable(orderItemList4);
        
        txtTime.setBorder(BorderFactory.createLineBorder(Color.gray));
        jLabel5.setForeground(Color.black);
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnFreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFreshTableActionPerformed
        // TODO add your handling code here:
        populateOrderListTable();
    }//GEN-LAST:event_btnFreshTableActionPerformed

    private void btnhooseDeliveryCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhooseDeliveryCompanyActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        BuyOrderItem item = (BuyOrderItem)jTable1.getValueAt(selectedRow, 0);
        String sellerPosition = item.getGood().getSeller().getPosition();
        //find choosed ExpressCompany
        String deliveryCompany=(String) jComboBox1.getSelectedItem();
        ArrayList<ExpressCompany> list = network.getExpressCompanyDir().getExpressCompanyList();
        for(int i=0;i<list.size();i++){
            if(deliveryCompany.equals(list.get(i).getName())){
                ec = list.get(i);
            }
        }
        
        //judge orderitem status
        if(item.getStatus().equals("Buyer submitted the order")){
            item.setStatus("SELLER SHIPPED");
            ec.getBuyOrder().getOrderItemList().add(item);
        }
        else{
            JOptionPane.showMessageDialog(null, "The order item's status is not 'Buyer submitted the order', you could not distribute!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //judge orderitem position and express company position
//        if(sellerPosition.equals(ec.getPosition())){}
//        else{
//            JOptionPane.showMessageDialog(null, "The order item's seller position is not suitable for this delivery company!", "Warning",JOptionPane.WARNING_MESSAGE);
//            return;
//        }
        
       
        populateOrderListTable();
    }//GEN-LAST:event_btnhooseDeliveryCompanyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFreshTable;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnhooseDeliveryCompany;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuyer;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
