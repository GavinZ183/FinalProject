/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SystemAdmin;

import Business.Buyer.Buyer;
import Business.EcoSystem;
import Business.Network.Network;
import Business.Role.BuyerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TT1
 */
public class ManageBuyerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageBuyerJPanel
     */
    JPanel userProcessContainer;
    Network network;
    EcoSystem system;
   String oldname = "";

    ManageBuyerJPanel(JPanel userProcessContainer, EcoSystem system,Network network) {
        initComponents();
        this.network=network;
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        btnSave.setEnabled(false);
        
        populateTable();
    }

    
    public void populateTable(){
        int rowCount = jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        for(Buyer buyer:network.getBuyerDirectory().getBuyerList()){
            
            Object row[] = new Object[4];
            row[0] = buyer;
            row[1] =buyer.getAddress();
            row[2] =buyer.getUserAccount().getPassword();
            row[3] =buyer.getTelephone();


            model.addRow(row);
            }
        }
    
    private boolean usernamePatternCorrect(String username) {
    //Pattern p = Pattern.compile("^[a-zA-Z0-9]+_[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Pattern p = Pattern.compile("^[a-zA-Z0-9]+_[a-zA-Z0-9]+$");
        Matcher m = p.matcher(username);
        boolean b = m.matches();
        return b;

    }

    private boolean passwordPatternCorrect(String password) {
        Pattern p = Pattern.compile("^(?![A-Za-z0-9]+$)(?![a-z0-9\\W]+$)(?![A-Za-z\\W]+$)(?![A-Z0-9\\W]+$)[a-zA-Z0-9\\W]{6,}$");
        Matcher m = p.matcher(password);
        boolean b = m.matches();
        return b;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTelephone1 = new javax.swing.JTextField();
        txtTelephone = new javax.swing.JTextField();
        txtUsername1 = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtAddress1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnFreshTable = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setBackground(java.awt.Color.pink);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setText("< back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 620, -1, -1));

        jLabel3.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel3.setText("Delete Buyer:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 268, -1, -1));

        jLabel8.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel8.setText("Update Buyer:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 326, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.setPreferredSize(new java.awt.Dimension(100, 30));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(654, 365, 90, 30));

        jLabel9.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel9.setText("Create new Buyer:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 480, -1, -1));

        txtPassword1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPassword1KeyReleased(evt);
            }
        });
        add(txtPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 568, 134, 27));

        jLabel10.setText("Password:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 573, -1, -1));
        add(txtTelephone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 568, 172, 27));
        add(txtTelephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 418, 172, 27));

        txtUsername1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsername1KeyReleased(evt);
            }
        });
        add(txtUsername1, new org.netbeans.lib.awtextra.AbsoluteConstraints(384, 520, 175, 27));

        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsernameKeyReleased(evt);
            }
        });
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(384, 366, 175, 27));
        add(txtAddress1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 520, 134, 27));

        jLabel7.setText("Telephone:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 423, -1, -1));

        jLabel11.setText("Telephone:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 573, -1, -1));

        jLabel5.setText("Username:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 371, -1, -1));

        btnSave.setText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(100, 30));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(654, 419, 90, 30));

        jLabel12.setText("Address:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 525, -1, -1));

        jLabel13.setText("Username:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 525, -1, -1));

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 418, 134, 27));

        btnCreate.setText("Create");
        btnCreate.setPreferredSize(new java.awt.Dimension(100, 30));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(654, 568, 90, 30));

        jLabel6.setText("Password:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 423, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Address", "Password", "Telephone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 92, 732, 147));

        btnFreshTable.setText("Fresh table");
        add(btnFreshTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(654, 60, -1, 30));

        btnDelete.setText("Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 30));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(654, 268, 90, 30));

        jLabel2.setText("Buyer list:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 62, -1, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 366, 134, 27));

        jLabel4.setText("Address:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 371, -1, -1));

        jLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel1.setText("Manage Buyers");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 21, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/023-货物查询.png"))); // NOI18N
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 70, 70));
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, 130, 20));
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, 130, 20));
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 130, 20));
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 600, 130, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
      Buyer buyer = ( Buyer)jTable1.getValueAt(selectedRow, 0);
      network.getBuyerDirectory().getBuyerList().remove(buyer);
      
       
       UserAccount us=new UserAccount();
       us=buyer.getUserAccount();
       system.getUserAccountDirectory().getUserAccountList().remove(us);
          populateTable();
         JOptionPane.showMessageDialog(null, "Delete the buyer successfully!");
                                                     // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
      Buyer buyer = ( Buyer)jTable1.getValueAt(selectedRow, 0);
      txtAddress.setText(buyer.getAddress());
      txtUsername.setText(buyer.getUserAccount().getUsername());
      txtPassword.setText(buyer.getUserAccount().getPassword());
      txtTelephone.setText(buyer.getTelephone());
      oldname = buyer.getUserAccount().getUsername();
      
       btnSave.setEnabled(true);
       btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
         int selectedRow = jTable1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
      Buyer buyer = (Buyer)jTable1.getValueAt(selectedRow, 0);
      
     //check If Username Is Unique
        if(txtUsername.getText().equals(oldname)){}
        else{
            if(system.getUserAccountDirectory().checkIfUsernameIsUnique(txtUsername.getText())){}
            else{
                JOptionPane.showMessageDialog(null, "This username has existed!", "Warning",JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        oldname = "";
        
        //check format of username and password
        if (usernamePatternCorrect(txtUsername.getText()) == false || passwordPatternCorrect(txtPassword.getText()) == false)
        {
         txtUsername.setBorder(BorderFactory.createLineBorder(Color.red));
         txtPassword.setBorder(BorderFactory.createLineBorder(Color.red));
         return;
        } 
        txtUsername.setBorder(BorderFactory.createLineBorder(Color.gray));
        txtPassword.setBorder(BorderFactory.createLineBorder(Color.gray));
      
      buyer.setAddress(txtAddress.getText());
      buyer.setTelephone(txtTelephone.getText());
      buyer.getUserAccount().setPassword(txtPassword.getText());
      buyer.getUserAccount().setUsername(txtUsername.getText());
       populateTable();
        btnSave.setEnabled(false);
       btnUpdate.setEnabled(true);
       txtUsername.setText("");
        txtPassword.setText("");
        txtTelephone.setText("");
        txtAddress.setText("");
        
        jLabel15.setText("");
        jLabel16.setText("");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String username=txtUsername1.getText();
        String password=txtPassword1.getText();
        String address=txtAddress1.getText();
        String telePhone=txtTelephone1.getText();
        //check If Username Is Unique
        if(system.getUserAccountDirectory().checkIfUsernameIsUnique(username)){}
        else{
            JOptionPane.showMessageDialog(null, "This username has existed!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //check format of username and password
        if (usernamePatternCorrect(txtUsername1.getText()) == false || passwordPatternCorrect(txtPassword1.getText()) == false)
        {
         txtUsername1.setBorder(BorderFactory.createLineBorder(Color.red));
         txtPassword1.setBorder(BorderFactory.createLineBorder(Color.red));
         return;
        } 
        txtUsername1.setBorder(BorderFactory.createLineBorder(Color.gray));
         txtPassword1.setBorder(BorderFactory.createLineBorder(Color.gray));
         
        Buyer buyer=new Buyer();
        UserAccount userAccount=new UserAccount();
        BuyerRole role=new BuyerRole();
        
        userAccount=system.getUserAccountDirectory().createUserAccount(username,password,role); 
        buyer.setAddress(address);
        buyer.setTelephone(telePhone);
        buyer.setUserAccount(userAccount);
        network.getBuyerDirectory().getBuyerList().add(buyer);
        network.getUserAccountDirectory().getUserAccountList().add(userAccount);
        
       
        
       
        txtUsername1.setText("");
        txtPassword1.setText("");
        txtTelephone1.setText("");
        txtAddress1.setText("");
         populateTable();
         jLabel17.setText("");
        jLabel18.setText("");
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyReleased
        // TODO add your handling code here:
        if(usernamePatternCorrect(txtUsername.getText())==false){
            jLabel15.setText("Invalid Format");
            jLabel15.setForeground(Color.red);
             
        }
        else
        {jLabel15.setText("Correct Format!");
            jLabel15.setForeground(Color.blue);
        }
    }//GEN-LAST:event_txtUsernameKeyReleased

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        // TODO add your handling code here:
        if(passwordPatternCorrect(txtPassword.getText())==false){
            jLabel16.setText("Invalid Format");
            jLabel16.setForeground(Color.red);

        }
        else
        {jLabel16.setText("Correct Format!");
            jLabel16.setForeground(Color.blue);
        }
    }//GEN-LAST:event_txtPasswordKeyReleased

    private void txtUsername1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsername1KeyReleased
        // TODO add your handling code here:
        if(usernamePatternCorrect(txtUsername1.getText())==false){
            jLabel17.setText("Invalid Format");
            jLabel17.setForeground(Color.red);
             
        }
        else
        {jLabel17.setText("Correct Format!");
            jLabel17.setForeground(Color.blue);
        }
    }//GEN-LAST:event_txtUsername1KeyReleased

    private void txtPassword1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassword1KeyReleased
        // TODO add your handling code here:
        if(passwordPatternCorrect(txtPassword1.getText())==false){
            jLabel18.setText("Invalid Format");
            jLabel18.setForeground(Color.red);

        }
        else
        {jLabel18.setText("Correct Format!");
            jLabel18.setForeground(Color.blue);
        }
    }//GEN-LAST:event_txtPassword1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFreshTable;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPassword1;
    private javax.swing.JTextField txtTelephone;
    private javax.swing.JTextField txtTelephone1;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtUsername1;
    // End of variables declaration//GEN-END:variables
}
